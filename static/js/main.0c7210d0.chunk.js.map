{"version":3,"sources":["fonts/Shift-BoldItalic.otf","fonts/Shift-Bold.otf","fonts/BentonSansCond-Regular.otf","fonts/BentonSansCond-RegItalic.otf","fonts/BentonSansCond-Bold.otf","fonts/BentonSansCond-BoldItalic.otf","components/InputSlider/InputSlider.js","components/FilterButtons/FilterButtons.js","components/OverlayPanel/OverlayPanel.js","components/Map/Map.js","components/MapWrapper/MapWrapper.js","config/mapbox-config.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","InputSlider","props","className","type","step","min","max","sliderMax","value","onChange","FilterButtons","onClick","id","autoFocus","OverlayPanel","currentDate","sliderValue","Map","layers","hoverInfo","state","data","prevProps","currentProps","this","forEach","d","push","ArcLayer","autoHighlight","getSourcePosition","f","parseFloat","source_lon","source_lat","getTargetPosition","target_lon","target_lat","getSourceColor","color","getTargetColor","getWidth","pickable","onHover","info","console","log","object","setState","updateTriggers","x","y","style","cursor","position","zIndex","pointerEvents","left","top","Date","Who","City","Riding","party_incumbent","mov","controller","initialViewState","viewState","_renderLayers","getTooltup","renderTooltip","mapboxApiAccessToken","accessToken","mapStyle","mapboxStyle","Component","zoom","window","innerWidth","center","MapWrapper","dates","map_options","bearing","longitude","latitude","maxZoom","minZoom","pitch","currentDateIndex","partyFilter","rawData","timestamp","Papa","parse","dataUrl","download","header","complete","results","handleData","filterButton","bind","updateRouteData","e","target","currentTimestamp","partyData","filter","map","split","sorted","date","getTime","sort","a","b","Set","target_id","routes","length","getTimestamp","valueAsNumber","App","MapboxConfig","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c7210d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shift-BoldItalic.5c3edbfd.otf\";","module.exports = __webpack_public_path__ + \"static/media/Shift-Bold.cdd38a86.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Regular.43cd4ac7.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-RegItalic.69a4217c.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Bold.6f6753fd.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-BoldItalic.a6640d89.otf\";","import React from 'react';\nimport './InputSlider.css';\n\nconst InputSlider = (props) => {\n\treturn (\n\t\t<input className=\"input-slider\" type=\"range\" \n\t\t\tstep={1} \n\t\t\tmin={1} \n\t\t\tmax={props.sliderMax}\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.onChange}>\n\t\t</input>\n\t);\n};\n\nexport default InputSlider;","import React from 'react';\nimport './FilterButtons.css';\n\nconst FilterButtons = (props) => {\n\treturn (\n\t\t<div className=\"filter-buttons\">\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"all\" autoFocus>All</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"furstenau\">Green</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"horgan\">NDP</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"wilkinson\">Liberal</button>\n\t\t</div>\n\t);\n};\n\nexport default FilterButtons;","import React from 'react';\nimport InputSlider from '../InputSlider/InputSlider';\nimport FilterButtons from '../FilterButtons/FilterButtons';\nimport './OverlayPanel.css';\n\nconst OverlayPanel = (props) => {\n\treturn (\n\t\t<div className=\"overlay-panel\">\n\t\t\t<h2 className=\"date\">{props.currentDate}</h2>\n\t\t\t\t<InputSlider \n\t\t\t\t\tcurrentDate={props.currentDate}\n\t\t\t\t\tsliderMax={props.sliderMax} \n\t\t\t\t\tvalue={props.sliderValue}\n\t\t\t\t\tonChange={props.onChange}>\n\t\t\t\t</InputSlider>\n\n\t\t\t<FilterButtons\n\t\t\t\tonClick={props.onClick}\n\t\t\t></FilterButtons>\n\t\t</div>\n\t);\n};\n\nexport default OverlayPanel;","import React, { Component } from 'react';\nimport DeckGL, { ArcLayer } from 'deck.gl';\nimport { StaticMap } from 'react-map-gl';\nimport ToolTipTemplate from '../ToolTipTemplate/ToolTipTemplate';\n\nimport './Map.css';\n\n\nexport default class Map extends Component {\n\tmap;\n\tpopup;\n\t// deckgl layers\n\tlayers = [];;\n\thoverInfo = {};\n\n\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\thoverInfo: {}\n\t\t};\n\t}\n\t\n\n\tcomponentDidMount() {\n\t}\n\n\tcomponentDidUpdate(prevProps, currentProps) {}\n\n\t_renderLayers() {\n\t\tconst layers = [];\n\t\tthis.props.data.forEach(d => {\n\t\t\tlayers.push(\n\t\t\t\tnew ArcLayer({\n\t\t\t\t\tid: d.id,\n\t\t\t\t\tdata: d.data,\n\t\t\t\t\t// Styles\n\t\t\t\t\tautoHighlight: true,\n\t\t\t\t\tgetSourcePosition: f => [parseFloat(f.source_lon), parseFloat(f.source_lat)],\n\t\t\t\t\tgetTargetPosition: f => [parseFloat(f.target_lon), parseFloat(f.target_lat)],\n\t\t\t\t\tgetSourceColor: d.color,\n\t\t\t\t\tgetTargetColor: d.color,\n\t\t\t\t\tgetWidth: 5,\n\t\t\t\t\t// interactivity\n\t\t\t\t\tpickable: true,\n\t\t\t\t\tonHover: info => {\n\t\t\t\t\t\tconsole.log(info.object)\n\t\t\t\t\t\tif (info.object) {\n\t\t\t\t\t\t\tthis.setState({ hoverInfo: info });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState({ hoverInfo: {} })\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t// updates\n\t\t\t\t\tupdateTriggers: {\n\t\t\t\t\t\tdata: [this.props.data]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\treturn layers;\n\t}\n\n\trenderTooltip(info) {\n\t\tconst { object, x, y } = info;\n\t\t\n\t\tif (!object) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='popup' style={{cursor: 'pointer', position: 'absolute', zIndex: 100, pointerEvents: 'none', left: x + 10, top: y}}>\n\t\t\t\t\t<h3>{object.Date}</h3>\n\t\t\t\t\t<p>{object.Who} travels to {object.City}, in the riding of <strong>{object.Riding}</strong>. In 2017, the {object.party_incumbent} won this riding by {object.mov} points.</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<DeckGL \n\t\t\t\tcontroller={true}\n\t\t\t\tinitialViewState={this.props.viewState}\n\t\t\t\tlayers={this._renderLayers()}\n\t\t\t\tgetTooltup={this.renderTooltip}>\n\n\t\t\t\t<StaticMap \n\t\t\t\t\tmapboxApiAccessToken={this.props.accessToken}\n\t\t\t\t\tmapStyle={this.props.mapboxStyle}>\n\t\t\t\t</StaticMap>\n\n\t\t\t\t{this.renderTooltip(this.state.hoverInfo)}\n\t\t\t</DeckGL>\n\t\t);\n\t}\n}\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport OverlayPanel from '../OverlayPanel/OverlayPanel';\nimport InputSlider from '../InputSlider/InputSlider';\nimport FilterButtons from '../FilterButtons/FilterButtons';\nimport Map from '../Map/Map';\nimport Papa from 'papaparse';\n\n\n// VARS\nconst zoom = window.innerWidth > 400 ? 7 : 7;\nconst center = window.innerWidth > 400 ? [49.008218,-123.496327] : [49.008218,-123.096327];\n\n\nexport default class MapWrapper extends Component {\n\tdates = [];\n\tmap_options = {\n\t\tbearing: -20,\n\t\tlongitude: center[1],\n\t\tlatitude: center[0],\n\t\tmaxZoom: 8,\n\t\tminZoom: 3,\n\t\tpitch: 60,\n\t\tzoom: zoom\n\t}\n\n\tstate = {\n\t\tcurrentDate: '',\n\t\tcurrentDateIndex: 0,\n\t\tdata: [],\n\t\tpartyFilter: 'all',\n\t\trawData: [],\n\t\tsliderMax: 0,\n\t\ttimestamp: 0\n\t}\n\n\tcomponentDidMount() {\n\t\tPapa.parse(this.props.dataUrl, {\n\t\t\tdownload: true,\n\t\t\theader: true,\n\t\t\tcomplete: results => this.handleData(results.data)\n\t\t});\n\n\t\tthis.filterButton = this.filterButton.bind(this);\n\t\tthis.updateRouteData = this.updateRouteData.bind(this);\n\t}\n\n\t// componentDidUpdate(prevProps, currentProps) {\n\t// \tconsole.log(prevProps)\n\t// \tconsole.log(currentProps)\n\t// }\n\n\t// animationLoop() {\n\t// \t// perform loop work here\n\t// \tconsole.log(this._frameId)\n\t// \tthis.updateRouteData();\n\n\t// \t// set up next iteration of the loop\n\t// \tthis._frameId = window.requestAnimationFrame(this.animationLoop);\n\t// }\n\tfilterButton(e) {\n\t\tlet data;\n\t\tconst id = e.target.id;\n\t\tconst currentTimestamp = this.state.timestamp;\n\n\t\tif (id !== 'all') {\n\t\t\tconst partyData = this.state.rawData.filter(d => d.id === id);\n\t\t\tdata = [{\n\t\t\t\tid: partyData[0].id,\n\t\t\t\tcolor: partyData[0].color,\n\t\t\t\tdata: partyData[0].data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t}];\n\t\t\t\n\t\t} else {\n\t\t\tdata = this.state.rawData.map(d => {\n\t\t\t\treturn {\n\t\t\t\t\tid: d.id,\n\t\t\t\t\tcolor: d.color,\n\t\t\t\t\tdata: d.data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t\t};\n\t\t\t})\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdata: data,\n\t\t\tpartyFilter: id\n\t\t});\n\t}\n\tgetTimestamp(currentDate) {\n\t\treturn new Date(`${currentDate.split('.')[1]} ${currentDate.split('.')[0]} 2020`);\n\t}\n\n\thandleData(data) {\n\t\t// sort by date\n\t\tconst sorted = data\n\t\t\t.map(d => {\n\t\t\t\td.timestamp = new Date(d.date).getTime()\n\t\t\t\treturn d;\n\t\t\t})\n\t\t\t.sort((a,b) => {\n\t\t\t\treturn new Date(a.date).getTime() - new Date(b.date).getTime();\n\t\t\t});\n\t\t\n\t\t// get list of dates\n\t\tthis.dates = [...new Set(sorted.filter(d => d.target_id !== '').map(d => d.Date))];\n\n\n\t\t// split data into party arrays\n\t\tconst routes = [{\n\t\t\tid: 'furstenau',\n\t\t\tcolor: [0,154,68,255],\n\t\t\tdata: sorted.filter(d => d.Who === 'Furstenau' && d.target_id !== '')\n\t\t}, {\n\t\t\tid: 'horgan',\n\t\t\tcolor: [253,78,39,255],\n\t\t\tdata: sorted.filter(d => d.Who === 'Horgan' && d.target_id !== '')\n\t\t}, {\n\t\t\tid: 'wilkinson',\n\t\t\tcolor: [234,0,58,255],\n\t\t\tdata: sorted.filter(d => d.Who === 'Wilkinson' && d.target_id !== '')\n\t\t}];\n\n\t\tconst currentDate = this.dates[this.dates.length - 1];\n\t\tthis.setState({\n\t\t\t// start on the last day\n\t\t\tcurrentDate: currentDate,\n\t\t\tcurrentDateIndex: this.dates.length,\n\t\t\tdata: routes,\n\t\t\trawData: routes,\n\t\t\tsliderMax: this.dates.length,\n\t\t\ttimestamp: this.getTimestamp(currentDate)\n\t\t});\n\n\t\t// start animation loop\n\t\t// this.startLoop();\n\t}\n\n\t// startLoop() {\n\t// \tconsole.log('startloop')\n\t// \tif (!this._frameId) {\n\t// \t\tthis._frameId = window.requestAnimationFrame(this.animationLoop);\n\t// \t}\n\t// }\n\n\tupdateRouteData(e) {\n\t\tlet data;\n\t\tconst value = e.target.valueAsNumber\n\t\tconst currentDate = this.dates[value - 1];\n\t\tconst partyFilter = this.state.partyFilter;\n\t\tconst currentTimestamp = this.getTimestamp(currentDate);\n\n\t\tif (partyFilter === 'all') {\n\t\t\tdata = this.state.rawData;\n\t\t} else {\n\t\t\tdata = this.state.rawData.filter(d => d.id === partyFilter);\n\t\t}\n\n\t\t// filter data by date\n\t\tconst routes = data.map(d => {\n\t\t\treturn {\n\t\t\t\tid: d.id,\n\t\t\t\tcolor: d.color,\n\t\t\t\tdata: d.data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tcurrentDate: currentDate,\n\t\t\tcurrentDateIndex: value,\n\t\t\tdata: routes,\n\t\t\ttimestamp: currentTimestamp\n\t\t});\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<OverlayPanel\n\t\t\t\t\tonClick={this.filterButton}\n\t\t\t\t\tcurrentDate={this.state.currentDate}\n\t\t\t\t\tsliderMax={this.state.sliderMax} \n\t\t\t\t\tsliderValue={this.state.currentDateIndex}\n\t\t\t\t\tonChange={this.updateRouteData}\n\t\t\t\t></OverlayPanel>\n\n\t\t\t\t<Map \n\t\t\t\t\taccessToken={this.props.accessToken}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tmapboxStyle={this.props.mapboxStyle}\n\t\t\t\t\tviewState={this.map_options}\n\t\t\t\t></Map>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n/*\n{this.state.sliderMax > 0 && (\n\t<InputSlider \n\t\tcurrentDate={this.state.currentDate}\n\t\tsliderMax={this.state.sliderMax} \n\t\tvalue={this.state.currentDateIndex}\n\t\tonChange={this.updateRouteData}>\n\t\t</InputSlider>\n)}\n<FilterButtons\n\tonClick={this.filterButton}\n></FilterButtons>\n*/","export default {\n\t\"accessToken\": \"pk.eyJ1IjoibmdyaWZmaXRocy1wb3N0bWVkaWEiLCJhIjoiY2tmb2x5Zm9wMDNrcDJ0bnZtMnFzbWFveCJ9.dWQATO8gtUhyHuYJNcyr_g\"\n};\n","import React from 'react';\nimport MapWrapper from '../MapWrapper/MapWrapper';\nimport MapboxConfig from '../../config/mapbox-config';\nimport './App.css';\n\n\n// map tiles & attribution\nconst mapboxStyle = 'mapbox://styles/mapbox/outdoors-v11';\n// data\nconst dataUrl = 'https://vs-postmedia-data.sfo2.digitaloceanspaces.com/elxn/campaign-stops%20-%20stops.csv';\n\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<MapWrapper\n\t  \t\t\tdataUrl={dataUrl}\n\t  \t\t\tmapboxStyle={mapboxStyle}\n\t  \t\t\taccessToken={MapboxConfig.accessToken}>\n\t  \t\t</MapWrapper>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n// FONTS\nimport './fonts/Shift-Bold.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/BentonSansCond-Regular.otf';\nimport './fonts/BentonSansCond-RegItalic.otf';\nimport './fonts/BentonSansCond-Bold.otf';\nimport './fonts/BentonSansCond-BoldItalic.otf';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}