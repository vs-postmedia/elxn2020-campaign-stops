{"version":3,"sources":["fonts/Shift-BoldItalic.otf","config/article-views.js","fonts/Shift-Bold.otf","fonts/BentonSansCond-Regular.otf","fonts/BentonSansCond-RegItalic.otf","fonts/BentonSansCond-Bold.otf","fonts/BentonSansCond-BoldItalic.otf","components/Map/Map.js","components/MapWrapper/MapWrapper.js","components/ArticleEntry/ArticleEntry.js","components/ArticleList/ArticleList.js","components/ScrollWrapper/ScrollWrapper.js","components/InputSlider/InputSlider.js","components/FilterButtons/FilterButtons.js","components/OverlayPanel/OverlayPanel.js","components/ScrollyMap/ScrollyMap.js","config/mapbox-config.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","center","window","innerWidth","views","sliderValue","activeButton","viewState","bearing","longitude","latitude","maxZoom","minZoom","pitch","transitionDuration","zoom","Map","props","layers","hoverInfo","state","data","console","log","this","forEach","d","push","ArcLayer","id","autoHighlight","getSourcePosition","f","parseFloat","source_lon","source_lat","getTargetPosition","target_lon","target_lat","getSourceColor","color","getTargetColor","getWidth","pickable","onHover","info","object","setState","updateTriggers","x","y","className","style","cursor","position","zIndex","pointerEvents","left","top","Date","Who","City","Riding","party_incumbent","mov","controller","touchRotate","initialViewState","_renderLayers","pickingRadius","mapboxApiAccessToken","accessToken","mapStyle","mapboxStyle","renderTooltip","Component","MapWrapper","articleView","transitionInterpolator","FlyToInterpolator","ArticleEntry","h2","data-index","dangerouslySetInnerHTML","__html","text","ArticleList","articleEntries","map","i","key","step","ScrollWrapper","scroller","Scrollama","setup","offset","onStepEnter","resp","updateGraphic","articleViews","onStepExit","togglePointerEvents","index","addEventListener","resize","container","document","getElementById","parseInt","length","classList","add","remove","stepValue","InputSlider","type","min","max","sliderMax","value","onChange","FilterButtons","onClick","OverlayPanel","currentDate","ScrollyMap","dates","allData","currentDateIndex","currentView","currentData","dataReady","timestamp","filterButton","bind","updateRouteData","Papa","parse","dataUrl","download","header","complete","results","handleData","e","target","currentTimestamp","updateButtonClasses","partyData","filter","split","sorted","date","getTime","sort","a","b","Set","target_id","routes","getTimestamp","querySelectorAll","valueAsNumber","App","ArticleEntries","ArticleViews","MapboxConfig","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65fc6d2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shift-BoldItalic.5c3edbfd.otf\";","const center = window.innerWidth > 400 ? [49.28218,-123.496327] : [49.58218,-123.596327];\n\nconst views = [\n\t{\n\t\tsliderValue: 22,\n\t\tactiveButton: 'all',\n\t\tviewState: {\n\t\t\tbearing: -20,\n\t\t\tlongitude: center[1],\n\t\t\tlatitude: center[0],\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 7\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 22,\n\t\tactiveButton: 'all',\n\t\tviewState: {\n\t\t\tbearing: 0.72,\n\t\t\tlongitude: -123.0432730329727,\n\t\t\tlatitude: 49.1780540598552,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 9\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 22,\n\t\tactiveButton: 'furstenau',\n\t\tviewState: {\n\t\t\tbearing: 9.8,\n\t\t\tlongitude: -123.6166979586502,\n\t\t\tlatitude: 48.73956382851505,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 50,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 8.5\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 21,\n\t\tactiveButton: 'all',\n\t\tviewState: {\n\t\t\tbearing: -0.35,\n\t\t\tlongitude: -123.34935312214706,\n\t\t\tlatitude: 52.597241438637184,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 4.5\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 21,\n\t\tactiveButton: 'all',\n\t\tviewState: {\n\t\t\tbearing: -8.83,\n\t\t\tlongitude: -122.964565510473,\n\t\t\tlatitude: 49.217462355344296,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 9\n\t\t}\n\t},\n]\n\nmodule.exports = views;","module.exports = __webpack_public_path__ + \"static/media/Shift-Bold.cdd38a86.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Regular.43cd4ac7.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-RegItalic.69a4217c.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Bold.6f6753fd.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-BoldItalic.a6640d89.otf\";","import React, { Component } from 'react';\nimport DeckGL, { ArcLayer } from 'deck.gl';\nimport { StaticMap } from 'react-map-gl';\n// import ToolTipTemplate from '../ToolTipTemplate/ToolTipTemplate';\n\nimport './Map.css';\n\n\nexport default class Map extends Component {\n\tmap;\n\tpopup;\n\t// deckgl layers\n\tlayers = [];\n\thoverInfo = {};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\thoverInfo: {}\n\t\t};\n\t}\n\n\t_viewChange(viewState) {\n\t\tconsole.log(viewState)\n\t}\n\t_renderLayers() {\n\t\tconst layers = [];\n\t\tthis.props.data.forEach(d => {\n\t\t\tlayers.push(\n\t\t\t\tnew ArcLayer({\n\t\t\t\t\tid: d.id,\n\t\t\t\t\tdata: d.data,\n\t\t\t\t\t// Styles\n\t\t\t\t\tautoHighlight: true,\n\t\t\t\t\tgetSourcePosition: f => [parseFloat(f.source_lon), parseFloat(f.source_lat)],\n\t\t\t\t\tgetTargetPosition: f => [parseFloat(f.target_lon), parseFloat(f.target_lat)],\n\t\t\t\t\tgetSourceColor: d.color,\n\t\t\t\t\tgetTargetColor: d.color,\n\t\t\t\t\tgetWidth: 4,\n\t\t\t\t\t// interactivity\n\t\t\t\t\tpickable: true,\n\t\t\t\t\tonHover: info => {\n\t\t\t\t\t\tif (info.object) {\n\t\t\t\t\t\t\tthis.setState({ hoverInfo: info });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState({ hoverInfo: {} })\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t// updates\n\t\t\t\t\tupdateTriggers: {\n\t\t\t\t\t\tdata: [this.props.data]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\treturn layers;\n\t}\n\n\trenderTooltip(info) {\n\t\tconst { object, x, y } = info;\n\t\t\n\t\tif (!object) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='popup' style={{cursor: 'pointer', position: 'absolute', zIndex: 100, pointerEvents: 'none', left: x + 10, top: y}}>\n\t\t\t\t\t<h3>{object.Date}</h3>\n\t\t\t\t\t<p>{object.Who} travels to {object.City}, in the riding of <strong>{object.Riding}</strong>. In 2017, the {object.party_incumbent} won this riding by {object.mov} points.</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<DeckGL \n\t\t\t\tcontroller={{touchRotate: true}}\n\t\t\t\t// onViewStateChange={this._viewChange}\n\t\t\t\tinitialViewState={this.props.viewState}\n\t\t\t\tlayers={this._renderLayers()}\n\t\t\t\tpickingRadius={10}>\n\n\t\t\t\t<StaticMap \n\t\t\t\t\tmapboxApiAccessToken={this.props.accessToken}\n\t\t\t\t\tmapStyle={this.props.mapboxStyle}>\n\t\t\t\t</StaticMap>\n\n\t\t\t\t{this.renderTooltip(this.state.hoverInfo)}\n\t\t\t</DeckGL>\n\t\t);\n\t}\n}\n\n\n\n","import { FlyToInterpolator } from 'deck.gl';\nimport React, { Fragment } from 'react';\nimport './MapWrapper.css';\n\nimport Map from '../Map/Map';\n\nconst MapWrapper = (props) => {\n\t\t// set the map view (done when scrolling)\n\t\tconst view = props.articleView;\n\t\tconst viewState = view.viewState;\n\t\tviewState.transitionInterpolator = new FlyToInterpolator();\n\n\t\treturn (\n\t\t\t<Fragment>\n\n\n\t\t\t\t<Map \n\t\t\t\t\taccessToken={props.accessToken}\n\t\t\t\t\tdata={props.data}\n\t\t\t\t\tmapboxStyle={props.mapboxStyle}\n\t\t\t\t\tviewState={viewState}\n\t\t\t\t></Map>\n\t\t\t</Fragment>\n\t\t);\n\n}\nexport default MapWrapper;","import React from 'react';\nimport './ArticleEntry.css';\n\nconst ArticleEntry = (props) => {\n\tlet h2;\n\tconst data = props.data;\n\n\tif (data.h2) {\n\t\th2 = <h2>{data.h2}</h2>;\n\t} else {\n\t\th2 = null;\n\t}\n\n\treturn (\n\t\t<li className='step' data-index={data.id}>\n\t\t\t<div className='card'>\n\t\t\t\t{h2}\n\t\t\t\t<p dangerouslySetInnerHTML={{__html: data.text}} />\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n\nexport default ArticleEntry;","import React from 'react';\nimport ArticleEntry from '../ArticleEntry/ArticleEntry'\n\nconst ArticleList = (props) => {\n\treturn (\n\t\t<ul>\n\t\t\t{props.articleEntries.map((d,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ArticleEntry data={d} key={d.id} step={props.step}></ArticleEntry>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nexport default ArticleList;\n","import React, { Component } from 'react';\nimport 'intersection-observer';\nimport Scrollama from 'scrollama';\nimport ArticleList from '../ArticleList/ArticleList';\n\nimport './ScrollWrapper.css';\n\nexport class ScrollWrapper extends Component {\n\tcomponentDidMount() {\n\t\tconst scroller = Scrollama();\n\n\t\tscroller\n\t\t\t.setup({\n\t\t\t\toffset: 0.66,\n\t\t\t\tstep: '.step'\n\t\t\t})\n\t\t\t.onStepEnter(resp => this.props.updateGraphic(resp, this.props.articleViews))\n\t\t\t.onStepExit(resp => {\n\t\t\t\tthis.togglePointerEvents(resp.index);\n\t\t\t});\n\n\t\t// setup resize event\n\t\twindow.addEventListener('resize', scroller.resize);\n\t}\n\n\ttogglePointerEvents(index) {\n\t\tconst container = document.getElementById('scroller');\n\n\t\t// disable pointer events so we can interact with underlying map\n\t\tif (parseInt(index) === this.props.articleEntries.length - 1) {\n\t\t\tcontainer.classList.add('no-pointer');\n\t\t} else {\n\t\t\tcontainer.classList.remove('no-pointer');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<article id=\"scroller\">\n\t\t\t\t<ArticleList\n\t\t\t\t\tstep={this.props.stepValue}\n\t\t\t\t\tarticleEntries={this.props.articleEntries}\n\t\t\t\t></ArticleList>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nexport default ScrollWrapper;","import React from 'react';\nimport './InputSlider.css';\n\nconst InputSlider = (props) => {\n\treturn (\n\t\t<input className=\"input-slider\" type=\"range\" \n\t\t\tstep={1} \n\t\t\tmin={1} \n\t\t\tmax={props.sliderMax}\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.onChange}>\n\t\t</input>\n\t);\n};\n\nexport default InputSlider;","import React from 'react';\nimport './FilterButtons.css';\n\nconst FilterButtons = (props) => {\n\n\treturn (\n\t\t<div className=\"filter-buttons\">\n\t\t\t<button onClick={props.onClick} className=\"btn active\" id=\"all\">All</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"furstenau\">Green</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"horgan\">NDP</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"wilkinson\">Liberal</button>\n\t\t</div>\n\t);\n};\n\nexport default FilterButtons;","import React from 'react';\nimport InputSlider from '../InputSlider/InputSlider';\nimport FilterButtons from '../FilterButtons/FilterButtons';\nimport './OverlayPanel.css';\n\nconst OverlayPanel = (props) => {\n\treturn (\n\t\t<div className=\"overlay-panel\">\n\t\t\t<h2 className=\"date\">{props.currentDate}</h2>\n\t\t\t<InputSlider \n\t\t\t\tcurrentDate={props.currentDate}\n\t\t\t\tsliderMax={props.sliderMax} \n\t\t\t\tvalue={props.sliderValue}\n\t\t\t\tonChange={props.onChange}>\n\t\t\t</InputSlider>\n\n\t\t\t<FilterButtons\n\t\t\t\tonClick={props.onClick}\n\t\t\t></FilterButtons>\n\t\t</div>\n\t);\n};\n\nexport default OverlayPanel;","import Papa from 'papaparse';\nimport React, { Component, Fragment } from 'react';\nimport MapWrapper from '../MapWrapper/MapWrapper';\nimport ScrollWrapper from '../ScrollWrapper/ScrollWrapper';\nimport OverlayPanel from '../OverlayPanel/OverlayPanel';\n\n// import './ScrollyMap.css';\n\nexport default class ScrollyMap extends Component {\n\tdates = [];\n\tarticleViews;\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.articleViews = this.props.articleViews;\n\t\tthis.filterButton = this.filterButton.bind(this);\n\t\tthis.updateGraphic = this.updateGraphic.bind(this);\n\t\tthis.updateRouteData = this.updateRouteData.bind(this);\n\t}\n\n\n\tstate = {\n\t\tactiveButton: 'all',\n\t\tallData: [],\n\t\tcurrentDateIndex: 0,\n\t\tcurrentView: this.props.articleViews[0],\n\t\tcurrentData: [],\n\t\tdataReady: false,\n\t\tsliderMax: 0,\n\t\tstepValue: 0,\n\t\ttimestamp: null\n\t};\n\n\tcomponentDidMount() {\n\t\t// download data\n\t\tPapa.parse(this.props.dataUrl, {\n\t\t\tdownload: true,\n\t\t\theader: true,\n\t\t\tcomplete: results => this.handleData(results.data)\n\t\t});\n\t}\n\t\n\tfilterButton(e) {\n\t\tlet data;\n\t\tconst id = e.target ? e.target.id : e;\n\t\tconst currentTimestamp = this.state.timestamp;\n\n\t\t// update the active button class\n\t\tthis.updateButtonClasses(id);\n\n\t\tif (id !== 'all') {\n\t\t\tconst partyData = this.state.allData.filter(d => d.id === id);\n\t\t\tdata = [{\n\t\t\t\tid: partyData[0].id,\n\t\t\t\tcolor: partyData[0].color,\n\t\t\t\tdata: partyData[0].data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t}];\n\t\t} else {\n\t\t\tdata = this.state.allData.map(d => {\n\t\t\t\treturn {\n\t\t\t\t\tid: d.id,\n\t\t\t\t\tcolor: d.color,\n\t\t\t\t\tdata: d.data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t\t};\n\t\t\t})\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentData: data,\n\t\t\tactiveButton: id\n\t\t});\n\t}\n\n\tgetTimestamp(currentDate) {\n\t\treturn new Date(`${currentDate.split('.')[1]} ${currentDate.split('.')[0]} 2020`);\n\t}\n\n\thandleData(data) {\n\t\t// sort by date\n\t\tconst sorted = data\n\t\t\t.map(d => {\n\t\t\t\td.timestamp = new Date(d.date).getTime()\n\t\t\t\treturn d;\n\t\t\t})\n\t\t\t.sort((a,b) => {\n\t\t\t\treturn new Date(a.date).getTime() - new Date(b.date).getTime();\n\t\t\t});\n\t\t\n\t\t// get list of dates\n\t\tthis.dates = [...new Set(sorted.filter(d => d.target_id !== '').map(d => d.Date))];\n\n\n\t\t// split data into party arrays\n\t\tconst routes = [{\n\t\t\tid: 'furstenau',\n\t\t\tcolor: [0,154,68,255],\n\t\t\tdata: sorted.filter(d => d.Who === 'Furstenau' && d.target_id !== '')\n\t\t}, {\n\t\t\tid: 'horgan',\n\t\t\tcolor: [253,78,39,255],\n\t\t\tdata: sorted.filter(d => d.Who === 'Horgan' && d.target_id !== '')\n\t\t}, {\n\t\t\tid: 'wilkinson',\n\t\t\tcolor: [8,71,154,255],\n\t\t\tdata: sorted.filter(d => d.Who === 'Wilkinson' && d.target_id !== '')\n\t\t}];\n\n\t\t// start on the most recent date\n\t\tconst currentDate = this.dates[this.dates.length - 1];\n\t\t\n\t\t// we want our mapview to start on the most recent day. This is probably a bit hack-y but...\n\t\tthis.articleViews.forEach(d => d.sliderValue = this.dates.length);\n\t\t// this.articleViews[0].sliderValue = this.dates.length;\n\t\t// this.articleViews[1].sliderValue = this.dates.length;\n\n\t\tthis.setState({\n\t\t\tallData: routes,\n\t\t\tcurrentData: routes,\n\t\t\tcurrentDate: currentDate,\n\t\t\t// start on the last day\n\t\t\tcurrentDateIndex: this.dates.length,\n\t\t\tdataReady: true,\n\t\t\tsliderMax: this.dates.length,\n\t\t\ttimestamp: this.getTimestamp(currentDate)\n\t\t});\n\t}\n\n\tupdateButtonClasses(id) {\n\t\tconst buttons = document.querySelectorAll('.btn');\n\t\tbuttons.forEach(d => {\n\t\t\td.id === id ? d.className = 'btn active' : d.className = 'btn';\n\t\t});\n\t}\n\n\tupdateGraphic(resp) {\n\t\tconst activeButton = this.articleViews[resp.index].activeButton;\n\n\t\tthis.setState({\n\t\t\tactiveButton: activeButton,\n\t\t\tcurrentView: this.articleViews[resp.index],\n\t\t\tstepValue: resp.index\n\t\t});\n\n\t\tthis.filterButton(activeButton);\n\t\tthis.updateRouteData(this.articleViews[resp.index].sliderValue);\n\t}\n\n\tupdateRouteData(e) {\n\t\tlet data;\n\t\tconst value = e.target ? e.target.valueAsNumber : e;\n\t\tconst currentDate = this.dates[value - 1];\n\t\tconst activeButton = this.state.activeButton;\n\t\tconst currentTimestamp = this.getTimestamp(currentDate);\n\n\t\tif (activeButton === 'all') {\n\t\t\tdata = this.state.allData;\n\t\t} else {\n\t\t\tdata = this.state.allData.filter(d => d.id === activeButton);\n\t\t}\n\n\t\t// filter data by date\n\t\tconst routes = data.map(d => {\n\t\t\treturn {\n\t\t\t\tid: d.id,\n\t\t\t\tcolor: d.color,\n\t\t\t\tdata: d.data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tcurrentDate: currentDate,\n\t\t\tcurrentDateIndex: value,\n\t\t\tcurrentData: routes,\n\t\t\ttimestamp: currentTimestamp\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<OverlayPanel\n\t\t\t\t\tonClick={this.filterButton}\n\t\t\t\t\tcurrentDate={this.state.currentDate}\n\t\t\t\t\tsliderMax={this.state.sliderMax} \n\t\t\t\t\tsliderValue={this.state.currentDateIndex}\n\t\t\t\t\tonChange={this.updateRouteData}\n\t\t\t\t></OverlayPanel>\n\t\t\t\t<div id=\"deckgl-map\">\n\t\t\t\t\t<MapWrapper\n\t\t\t\t\t\taccessToken={this.props.accessToken}\n\t\t\t\t\t\tmapboxStyle={this.props.mapboxStyle}\n\t\t\t\t\t\tarticleView={this.state.currentView}\n\t\t\t\t\t\tcurrentDate={this.state.currentDate}\n\t\t\t\t\t\tcurrentDateIndex={this.state.currentDateIndex}\n\t\t\t\t\t\tallData={this.state.allData}\n\t\t\t\t\t\tdata={this.state.currentData}\n\t\t\t\t\t\tfilterButton={this.filterButton}\n\t\t\t\t\t\tsliderMax={this.state.sliderMax}\n\t\t\t\t\t\tstepValue={this.state.stepValue}\n\t\t\t\t\t\tupdateRouteData={this.updateRouteData}\n\t\t\t\t\t\t>\n\t\t\t\t\t</MapWrapper>\n\t\t\t\t</div>\n\t\t\t\t{ this.state.dataReady &&\n\t\t\t\t\t<ScrollWrapper\n\t\t\t  \t\t\tarticleEntries={this.props.articleEntries}\n\t\t\t  \t\t\tarticleViews={this.props.articleViews}\n\t\t\t  \t\t\tdataReady={this.state.dataReady}\n\t\t\t  \t\t\tstep={this.state.stepValue}\n\t\t\t  \t\t\tupdateGraphic={this.updateGraphic}\n\t\t  \t\t\t></ScrollWrapper>\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n","export default {\n\t\"accessToken\": \"pk.eyJ1IjoibmdyaWZmaXRocy1wb3N0bWVkaWEiLCJhIjoiY2tmb2x5Zm9wMDNrcDJ0bnZtMnFzbWFveCJ9.dWQATO8gtUhyHuYJNcyr_g\"\n};\n","import React from 'react';\nimport ScrollyMap from '../ScrollyMap/ScrollyMap';\n\nimport MapboxConfig from '../../config/mapbox-config';\nimport ArticleEntries from '../../config/article-entries.json';\nimport ArticleViews from '../../config/article-views.js';\n\nimport './App.css';\n\n\n// map tiles & attribution\nconst MapboxStyle = 'mapbox://styles/mapbox/outdoors-v11';\n// data\nconst dataUrl = 'https://vs-postmedia-data.sfo2.digitaloceanspaces.com/elxn/campaign-stops%20-%20stops.csv';\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<ScrollyMap\n\t  \t\t\tarticleEntries={ArticleEntries}\n\t  \t\t\tarticleViews={ArticleViews}\n\t  \t\t\tdataUrl={dataUrl}\n\t  \t\t\tmapboxStyle={MapboxStyle}\n\t  \t\t\taccessToken={MapboxConfig.accessToken}\n\t  \t\t></ScrollyMap>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n// FONTS\nimport './fonts/Shift-Bold.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/BentonSansCond-Regular.otf';\nimport './fonts/BentonSansCond-RegItalic.otf';\nimport './fonts/BentonSansCond-Bold.otf';\nimport './fonts/BentonSansCond-BoldItalic.otf';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}